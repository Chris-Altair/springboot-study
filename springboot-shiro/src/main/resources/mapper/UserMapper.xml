<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.dao.UserDao">
    <select id="get" resultType="com.sbs.domain.UserDO">
        select `error_login_count`,`user_id`,`username`,`password`,`status`,`islogin`,`create_time`,`update_time` from
        sys_user where user_id = #{value}
    </select>
    <select id="list" resultType="com.sbs.domain.UserDO">
        select `error_login_count`,`user_id`,`username`,`password`,`status`,`islogin`,`create_time`,`update_time` from
        sys_user
        <where>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            <if test="username != null and username != ''">and username = #{username}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="islogin != null and islogin != ''">and islogin = #{islogin}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
            <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">order by ${sort} ${order}</when>
            <otherwise>order by user_id desc</otherwise>
        </choose>
        <if test="offset != null and limit != null">limit #{offset}, #{limit}</if>
    </select>
    <select id="count" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            <if test="username != null and username != ''">and username = #{username}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="islogin != null and islogin != ''">and islogin = #{islogin}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
            <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
        </where>
    </select>
    <insert id="save" parameterType="com.sbs.domain.UserDO" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user (
        `user_id`,`username`,`password`,`status`,`islogin`,`error_login_count`,`create_time`,`update_time` ) values (
        #{user_id},#{username},#{password},#{deptId},#{status},#{islogin},#{error_login_count},#{create_time},#{update_time}
        )
    </insert>
    <update id="update" parameterType="com.sbs.domain.UserDO">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="islogin != null">`islogin` = #{islogin},</if>
            <if test="errorLoginCount != null">`error_login_count` = #{errorLoginCount},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where user_id = #{userId}
    </update>
    <delete id="remove">delete from sys_user where user_id = #{value}</delete>
    <delete id="batchRemove">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">#{userId}</foreach>
    </delete>
</mapper>